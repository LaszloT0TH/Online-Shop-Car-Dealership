@model IEnumerable<CarAccessoriesModel>

@{
    @ViewData["Title"]
    // CarAccessories
}

<h1>Auto Zubehör</h1>

<br />
<h2>Auto Zubehör Liste</h2>

@{ 
    // Customer View 
}
@if ((!User.IsInRole("Admin")) || 
    (!User.IsInRole("Manager")) ||
    (!User.IsInRole("Salesperson")) )
{    
       
    <div class="container-fluid bg-trasparent my-4 p-3" style="position: relative">
      <div class="row row-cols-1 row-cols-xs-2 row-cols-sm-2 row-cols-lg-4 g-3">
    
            @foreach (var carAccessories in Model)
            {
                    // EN
                    // path, if there is no image, "noimage.jpg" should be displayed
                    // GE
                    // Pfad, wenn kein Bild vorhanden ist, sollte "noimage.jpg" angezeigt werden
                    // HU
                    // elérési út, ha nincs kép akkor a "noimage.jpg" jelenjen meg
                    var photoPath = "~/images/" + (carAccessories.PhotoPath ?? "noimage.jpg");
                      <div class="col hp">
                          <div class="card h-100 shadow-sm" >
                            <a asp-controller="CarAccessories" asp-action="Details" asp-route-id="@carAccessories.Id">
                              <img class="card-img-top" src="@photoPath" asp-append-version="true"/>
                            </a>

                            <div class="label-top shadow-sm">
                              <a class="text-white">@carAccessories.ProductName</a>
                            </div>
                            <div class="label-top shadow-sm">
                              <a class="text-white">@carAccessories.carAccessoriesProductGroupModel.CAPGName</a>
                            </div>
                            <div class="card-body">
                              <div class="clearfix mb-3">
                                <span class="float-start badge rounded-pill bg-success">€ @Convert.ToDouble(@carAccessories.UnitPrice).ToString("0.##")</span>

                                <span class="float-end">
                                    <a class="small text-muted text-uppercase aff-link" asp-controller="CarAccessories" asp-action="Details" class='btn btn-outline-info' asp-route-id="@carAccessories.Id"><i class="bi bi-eye"></i>Details</a>
                                </span>
                              </div>
                              <h5 class="card-title">
                                <a target="_blank">@carAccessories.ProductName</a>
                              </h5>
                              <div class="clearfix mb-1">

                                <span class="float-start"><a href="#"><i class="fas fa-question-circle"></i></a></span>

                                <span class="float-end">
                                  <i class="far fa-heart" style="cursor: pointer"></i>

                                </span>
                              </div>
                            </div>
                          </div>
                      </div>

            }
      </div>
    </div>

}
    
@*Salesperson & Manager & Admin View*@ 
@if ((User.Identity.IsAuthenticated && User.IsInRole("Admin")) || 
    (User.Identity.IsAuthenticated && User.IsInRole("Manager")) ||
    (User.Identity.IsAuthenticated && User.IsInRole("Salesperson")) )
{
@*    <a asp-controller="CarAccessories" asp-action="Search" class='btn btn-primary btn-sm'>Search Auto Zubehör</a>
*@    <a asp-controller="CarAccessories" asp-action="Create" class='btn btn-primary btn-sm'>Create neue Auto Zubehör</a>
    
    <table class="table">
        <thead>
            <tr>
                @if (User.Identity.IsAuthenticated && User.IsInRole("Admin")) // only Admin
                {
                    <th>@Html.DisplayNameFor(model => model.Id)</th>
                }
                <th>@Html.DisplayNameFor(model => model.ProductName)</th>
                <th>@Html.DisplayNameFor(model => model.carAccessoriesProductGroupModel.CAPGName)</th>
                <th>@Html.DisplayNameFor(model => model.QuantityOfStock)</th>
                @if ((User.Identity.IsAuthenticated && User.IsInRole("Admin")) || (User.Identity.IsAuthenticated && User.IsInRole("Manager")) ) 
                {
                    <th>@Html.DisplayNameFor(model => model.MinimumStockQuantity)</th>            
                }
                <th>@Html.DisplayNameFor(model => model.NetSellingPrice)</th>
                <th>@Html.DisplayNameFor(model => model.SalesUnit)</th>
                <th>@Html.DisplayNameFor(model => model.UnitPrice)</th>
                <th>@Html.DisplayNameFor(model => model.carAccessoriesUnitModel.UnitName)</th>
                <th>@Html.DisplayNameFor(model => model.LastUpdateTime)</th>
                <th>@Html.DisplayNameFor(model => model.Brand)</th>
                <th>@Html.DisplayNameFor(model => model.CreationDate)</th>
                <th>@Html.DisplayNameFor(model => model.Description)</th>
                <th>@Html.DisplayNameFor(model => model.Version)</th>
                <th>@Html.DisplayNameFor(model => model.PhotoPath)</th>
            </tr>
        </thead>
        <tbody>
                @foreach (var carAccessories in Model)
                {
                    <tr>
                        @if (User.Identity.IsAuthenticated && User.IsInRole("Admin")) // only Admin
                        {
                            <td>@carAccessories.Id</td>
                        }
                        <td>@carAccessories.ProductName</td>
                        <td>@carAccessories.carAccessoriesProductGroupModel.CAPGName</td>
                        <td>@carAccessories.QuantityOfStock</td>
                        @if ((User.Identity.IsAuthenticated && User.IsInRole("Admin")) || (User.Identity.IsAuthenticated && User.IsInRole("Manager")) ) 
                        {
                            <td>@carAccessories.MinimumStockQuantity</td>
                        }
                        <td>@carAccessories.NetSellingPrice</td>
                        <td>@carAccessories.SalesUnit</td>
                        <td>@Convert.ToDouble(@carAccessories.UnitPrice).ToString("0.##")</td>
                        <td>@carAccessories.carAccessoriesUnitModel.UnitName</td>
                        <td>@carAccessories.LastUpdateTime.ToString()</td>
                        <td>@carAccessories.Brand</td>
                        <td>@carAccessories.CreationDate.ToString()</td>
                        <td>@carAccessories.Description</td>
                        <td>@carAccessories.Version</td>
                       @{
                            // EN
                            // path, if there is no image, "noimage.jpg" should be displayed
                            // GE
                            // Pfad, wenn kein Bild vorhanden ist, sollte "noimage.jpg" angezeigt werden
                            // HU
                            // // elérési út, ha nincs kép akkor a "noimage.jpg" jelenjen meg
                            var photoPath = "~/images/" + (carAccessories.PhotoPath ?? "noimage.jpg");
                        }
                        <td>
                            <div class="card-body text-center">
                                <img class="card-img-top" src="@photoPath" asp-append-version="true"/>
                            </div> 
                        </td>
                        <td>     
                            <a asp-controller="CarAccessories" asp-action="Details" class='btn btn-outline-info' asp-route-id="@carAccessories.Id"><i class="bi bi-eye"></i>Details</a>

                            @if ((User.Identity.IsAuthenticated && User.IsInRole("Admin")) || (User.Identity.IsAuthenticated && User.IsInRole("Manager")) ) 
                            {
                                <a asp-controller="CarAccessories" asp-action="Edit" class='btn btn-outline-primary' asp-route-id="@carAccessories.Id"><i class="bi bi-pencil-square"></i>Edit</a>
                            }
                        </td>
                    </tr>
                }
            
        </tbody>
    </table>
}








