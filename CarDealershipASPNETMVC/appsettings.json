{
  "Logging": {
    "Debug": {
      "LogLevel": {
        // EN
        // the Trace setting displays all information all 6 levels start with the 1st
        // GE
        // Die Trace-Einstellung zeigt alle Informationen an, alle 6 Ebenen beginnen mit der 1
        // HU
        // a Trace beállítás minden információt megjelenít mind a 6 szintet az 1.-vel kezdi
        "Default": "Warning",
        "CarDealershipASPNETMVC.Controllers.Homecontroller": "Warning",
        "CarDealershipASPNETMVC.Controllers.CarAccessoriesController": "Warning",
        "Microsoft.AspNetCore": "Warning"
      }
    },
    "LogLevel": {
      "Default": "Trace",
      "CarDealershipASPNETMVC.Controllers.Homecontroller": "Trace",
      "CarDealershipASPNETMVC.Controllers.CarAccessoriesController": "Trace",
      "Microsoft.AspNetCore": "Warning"
    }
  },
  "Smtp": {
    "Server": "mail.whatever.com",
    "Port": 587,
    "Host": "no-replysmtp.gmail.com",
    "Password": "your_password",
    "EnableSsl": "true"
  }
}


// JsonReaderException: '{' is an invalid start of a property name
// https://stackoverflow.com/questions/60167040/net-core-3-1-createhostbuilder-cannot-parse-json-file
// EN
// JSON debugger
// GE
// JSON-Debugger
// HU
// JSON hibakereső
// https://jsonlint.com/


// EN
// connection string helye a secret.json fájlban van tárolva
// Use of Secret Manager Secret Manager allows developers to store 
// and retrieve sensitive data during the development of an ASP.NET Core application. 
// It stores sensitive data i.e user secrets in a file with name secrets.json.
//User secrets in production
//To protect sensitive data, secrets.json file is deliberately kept outside of the project folder. 
//This file is not checked into source control repository. This means secrets.json file is not copied onto the production server, 
//when we actually build and deploy. So, where will the application find database connection string.
//Well, on a production server store the database connection string in an environment variable. 
//If you remember, IConfiguration service is setup to read configuration information from all the following configuration sources.
//appsettings.json
//User secrets
//Environment variables
//Command-line argument
//This means, in spite of not having secrets.json file on the production server, our application should work just fine because it will find the required database connection string in the environment variable.
//Secret Manager isn't for staging or production server, it should only be used on development machine. For production always use either environment variables, Azure Key Vault, or 3rd party production secret management system.

// DE
// Verbindungszeichenfolge helye a secret.json fájlban van tárolva
// Verwendung von Secret Manager Secret Manager ermöglicht Entwicklern das Speichern
// und vertrauliche Daten während der Entwicklung einer ASP.NET Core-Anwendung abrufen.
// Es speichert sensible Daten, d. h. Benutzergeheimnisse, in einer Datei mit dem Namen secrets.json.
// Benutzergeheimnisse in der Produktion
//Zum Schutz vertraulicher Daten wird die Datei secrets.json bewusst außerhalb des Projektordners aufbewahrt.
//Diese Datei wird nicht in das Source Control Repository eingecheckt. Das bedeutet, dass die Datei secrets.json nicht auf den Produktionsserver kopiert wird.
//wenn wir tatsächlich bauen und bereitstellen. Wo findet die Anwendung also die Datenbankverbindungszeichenfolge?
//Nun, auf einem Produktionsserver speichern Sie die Datenbank-Verbindungszeichenfolge in einer Umgebungsvariablen.
//Wenn Sie sich erinnern, ist der IConfiguration-Dienst so eingerichtet, dass er Konfigurationsinformationen aus allen folgenden Konfigurationsquellen liest.
//appsettings.json
// Benutzergeheimnisse
//Umgebungsvariablen
//Befehlszeilenargument
//Das bedeutet, obwohl unsere Anwendung keine Datei secrets.json auf dem Produktionsserver hat, sollte sie problemlos funktionieren, da sie die erforderliche Datenbankverbindungszeichenfolge in der Umgebungsvariable findet.
//Secret Manager ist nicht für Staging- oder Produktionsserver gedacht, er sollte nur auf Entwicklungscomputern verwendet werden. Verwenden Sie für die Produktion immer entweder Umgebungsvariablen, Azure Key Vault oder das Produktionsgeheimnisverwaltungssystem eines Drittanbieters.

// HU
// connectionsstring helye a secret.jsom fájlban van tárolva
// A Secret Manager Secret Manager használata lehetővé teszi a fejlesztők számára, 
// hogy bizalmas adatokat tároljanak és kérjenek le egy ASP.NET Core alkalmazás fejlesztése során.
// A bizalmas adatokat, azaz a felhasználói titkokat egy secrets.json nevű fájlban tárolja.
//Felhasználói titkos kulcsok éles környezetben A bizalmas adatok védelme érdekében secrets.json fájlt 
//szándékosan a projektmappán kívül tartják. Ez a fájl nincs beadva a forrásvezérlő adattárba. 
//Ez azt jelenti, hogy secrets.json fájl nem lesz átmásolva az éles kiszolgálóra, 
//amikor ténylegesen felépítjük és üzembe helyezzük. Tehát hol találja meg az alkalmazás az adatbázis-kapcsolati sztringet. 
//Nos, egy éles kiszolgálón tárolja az adatbázis kapcsolati sztringjét egy környezeti változóban. 
//Ha emlékszik, az IConfiguration szolgáltatás úgy van beállítva, hogy beolvassa a konfigurációs adatokat 
//az összes következő konfigurációs forrásból. 
//appsettings.json 
//Felhasználói titkok 
//Környezeti változók 
//Parancssori argumentum 
//Ez azt jelenti, hogy annak ellenére, hogy nincs secrets.json fájl az éles kiszolgálón, 
//az alkalmazásunknak jól kell működnie, mert megtalálja a szükséges adatbázis-kapcsolati sztringet a környezeti változóban. 
//A Secret Manager nem átmeneti vagy éles kiszolgálóhoz való, csak fejlesztői gépen használható. 
//Éles környezetben mindig használjon környezeti változókat, Azure Key Vault vagy 3. féltől származó éles titkos kulcskezelő rendszert.





